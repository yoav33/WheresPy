# WheresPy? sPyWhere - configuration file
# make sure all letters in variables are lowercase! otherwise they may not be registered.
# note: 'X' is used as placeholder value for variables
# this is so that setup.py will only replace values that are previously unchanged.

[general]
# default is y, this is toggled to n after setup.
# if this is set to Y then the client will not run.
# if this is set to N and setup.py is run, it will skip to generating encryption key.
runsetup=y

[server]
serverip=X
serverport=X

[client] # note: client settings apply to all clients.
devicename=X
# frequency of sending information from clients (in seconds)
freq=X
# sendip (y,n) - send IP of clients in reports?
sendip=X
# sendnetworks (y,n) - send log of all available networks?
sendnetworks=X
# screenshot (y,n) - take screenshot?
screenshot=X
# dirspy (C:\...\...) - client will save a text file with a tree of this directory. be warned this may take a lot of space!
# set dirspy to "n" to disable this.
# note that if python tries to do this for folders it does not have access to (e.g. sys32) it will crash! you can use this for desktop, documents...
# this overall is a very WIP feature.. it will crash the client if the dirspy output has weird letters in it.
# use 'dirspytest.py' to test if folders will result in a crash.
dirspy=n
# dormant (on,off) - ON means client will remain connected to server but not send anything automatically.
# 'dormantserver.py' is available to control dormant clients which only send items when commanded to by the server.
# note: client will connect to the same IP/port for both dormant and active servers.
dormant=off
# protectencryptkey (y,n) - y means dormant mode will not be able to send filekey.key to server. this is set to Y by default.
protectencryptkey=y
# cancelencryption (y,n) - Y means generated reports will not be encrypted. this is set to N by default.
cancelencryption=n